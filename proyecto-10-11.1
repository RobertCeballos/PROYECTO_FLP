#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.0.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 30 #"(lib \"image-core.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 47 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 9744 0 22 3 1 #"("
0 0 14 3 4 #"load"
0 0 4 3 1 #" "
0 0 19 3 15 #"\"variables.scm\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 91
(
 #";*******************************************************************"
 #"***********************"
) 0 0 4 29 1 #"\n"
0 0 17 3 84
(
 #";;;;; Interpretador para lenguaje con condicionales, ligadura local,"
 #" procedimientos,"
) 0 0 4 29 1 #"\n"
0 0 17 3 81
(
 #";;;;; procedimientos recursivos, ejecuci\303\263n secuencial y asign"
 #"aci\303\263n de variables"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 56
#";; La definici\303\263n BNF para las expresiones del lenguaje:"
0 0 4 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";;  <program>       ::= <expression>"
0 0 4 29 1 #"\n"
0 0 17 3 41 #";;                      <a-program (exp)>"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;  <expression>    ::="
0 0 4 29 1 #"\n"
0 0 17 3 24 #";;  <primitive>     ::= "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 71
(
 #";POSIBLES FUNCIONES A ELIMINAR isFree?,  apply-env-env, revisar orel"
 #"se "
) 0 0 4 29 1 #"\n"
0 0 17 3 91
(
 #";*******************************************************************"
 #"***********************"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 87
(
 #";*******************************ESPECIFICACION LEXICA***************"
 #"*******************"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 4 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 8 #"white-sp"
0 0 22 3 1 #"("
0 0 14 3 10 #"whitespace"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"skip"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"comment"
0 0 22 3 1 #"("
0 0 19 3 3 #"\"%\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 20 3 9 #"#\\newline"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 14 3 4 #"skip"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 130
(
 #";(variable ((or \"_\" \"A\" \""
 #"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H"
 #"\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\""
 #" \"\303\221\" \"O\" \"P\" \"Q\" \"R\" \"S\""
 #" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\") "
) 0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 52 #";            (arbno (or letter digit \"?\")) ) symbol)"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"variable"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"_\""
0 0 22 3 1 #"("
0 0 14 3 6 #"concat"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"F\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"H\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"K\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"P\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"Q\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"R\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"V\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"W\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"Y\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 14 3 6 #"letter"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"?\""
0 0 22 3 5 #")))))"
0 0 4 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"atomo"
0 0 4 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 4 3 1 #" "
0 0 19 3 4 #"\"ch\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"f\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"h\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"i\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"j\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"k\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"m\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"n\""
0 0 4 3 1 #" "
0 0 19 3 4 #"\"\303\261\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"u\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"v\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 14 3 6 #"letter"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"))"
0 0 14 3 6 #"symbol"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 17 3 38 #";( (arbno \"'\" letter \"'\") )) ) symbol)"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 26 #";(a-variable (\"_\") symbol)"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"entero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"digit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"string"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"entero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"~\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"string"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"flotante"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"digit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 3 #"\".\""
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"string"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"flotante"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"~\""
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 3 #"\".\""
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 5 #"digit"
0 0 22 3 2 #"))"
0 0 14 3 6 #"string"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 90
(
 #";*************************************GRAMATICA*********************"
 #"**********************"
) 0 0 4 29 1 #"\n"
0 0 17 3 41
#";Especificaci\303\263n Sint\303\241ctica (gram\303\241tica)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"program"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 9 #"a-program"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"cuerpo"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 7 #"cuerpoc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"variable"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"var-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 36 #";(expression (a-variable) a-var-exp)"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"entero"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"entero-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"flotante"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"flotante-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 22 3 1 #")"
0 0 19 3 3 #"\"}\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 11 #"primapp-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 7 #"\"local\""
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"in\""
0 0 4 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"end\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 9 #"local-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 17 3 55
#";    (expression ( \"{\" primitive (arbno expression)\"}\")"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";                primcell-exp)"
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 49 #"; (expression ( primitive expression) check-cell)"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 5 #"\"set\""
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 22 3 1 #")"
0 0 14 3 7 #"set-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 5 #"\"for\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"in\""
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"..\""
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 19 3 4 #"\"do\""
0 0 4 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"end\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"for-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"[\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"]\""
0 0 22 3 1 #")"
0 0 14 3 8 #"list-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"atomo"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 5 #"atomo"
0 0 4 3 1 #" "
0 0 19 3 3 #"\":\""
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"record-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\".\""
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 4 3 1 #" "
0 0 19 3 3 #"\".\""
0 0 4 3 1 #" "
0 0 14 3 5 #"atomo"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"acc-camp-reg"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 3 4 #"    "
0 0 17 3 17 #";; PROCEDIMIENTOS"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 6 #"\"proc\""
0 0 4 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"}\""
0 0 4 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"end\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"proc-exp"
0 0 22 3 1 #")"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"{\""
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 22 3 1 #")"
0 0 19 3 3 #"\"}\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"app-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 10 #";BOOLEANOS"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"boolean"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"bool-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"boolean"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 6 #"\"true\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"boolean"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 7 #"\"false\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 11 #";PRIMITIVAS"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 12 #";Aritmeticas"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"+\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"sum-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"-\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"sub-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"*\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 9 #"mult-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"/\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"div-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 12 #";Comparacion"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"<\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"menor-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 4 #"\"=<\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"meneq-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\">\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"mayor-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 4 #"\">=\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"mayig-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 4 #"\"==\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"igual-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 7 #";Celdas"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 9 #"\"newcell\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"newcell-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 9 #"\"iscell?\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 11 #"iscell-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"@\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"valcell-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 9 #"\"setcell\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"setcell-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 8 #";puertos"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 9 #"\"newport\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"newport-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 9 #"\"isport?\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 11 #"isport-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 6 #"\"send\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"sendP-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\",\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"valport-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 8 #";Logicas"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 8 #"\"orelse\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 11 #"orelse-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 9 #"\"andthen\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"andthen-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 12 #";Unificacion"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 3 #"\"=\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 9 #"unif-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 15 #";Prim-variables"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 9 #"\"isfree?\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 11 #"isfree-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 19 3 8 #"\"isdet?\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"isdet-prim"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";Construidos autom\303\241ticamente:"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 28 #"sllgen:make-define-datatypes"
0 0 4 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 4 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 18 #"show-the-datatypes"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 28 #"sllgen:list-define-datatypes"
0 0 4 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 4 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 26 #";Parser, Scanner, Interfaz"
0 0 4 29 1 #"\n"
0 0 17 3 76
(
 #";El FrontEnd (An\303\241lisis l\303\251xico (scanner) y sint\303\241"
 #"ctico (parser) integrados)"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"scan&parse"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 25 #"sllgen:make-string-parser"
0 0 4 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 4 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 32 #";El Analizador L\303\251xico (Scanner)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"just-scan"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 26 #"sllgen:make-string-scanner"
0 0 4 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 4 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 65
(
 #";El Interpretador (FrontEnd + Evaluaci\303\263n + se\303\261al para "
 #"lectura )"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 20 #"sllgen:make-rep-loop"
0 0 4 3 2 #"  "
0 0 19 3 6 #"\"--> \""
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"pgm"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"eval-program"
0 0 4 3 2 #"  "
0 0 14 3 3 #"pgm"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 25 #"sllgen:make-stream-parser"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 91
(
 #";****************************************INTERPRETE*****************"
 #"***********************"
) 0 0 4 29 1 #"\n"
0 0 17 3 35 #";eval-program: <programa> -> numero"
0 0 4 29 1 #"\n"
0 0 17 3 106
(
 #"; funci\303\263n que eval\303\272a un programa teniendo en cuenta un"
 #" ambiente dado (se inicializa dentro del programa)"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"eval-program"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"pgm"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 9 #"resultado"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 7 #"program"
0 0 4 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 9 #"a-program"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"init-env"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 4 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"print"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"resultado"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"unparse"
0 0 4 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 4 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 10 #"a-variable"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 14 3 9 #"resultado"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 18 #";Env inicial      "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"init-env"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"extend-env"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"A"
0 0 4 3 1 #" "
0 0 14 3 1 #"B"
0 0 4 3 1 #" "
0 0 14 3 1 #"C"
0 0 22 3 1 #")"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #")("
0 0 14 3 9 #"empty-env"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";Store inicial"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"A"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"a-variable"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"B"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"a-variable"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 3 #"-10"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 1 #"C"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"a-variable"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 2 #"15"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 5 #"store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 1 #"A"
0 0 4 3 1 #" "
0 0 14 3 1 #"B"
0 0 4 3 1 #" "
0 0 14 3 1 #"C"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 14 3 5 #"store"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";****************************************AMBIENTES******************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 38 #";definici\303\263n del tipo de dato ambiente"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 4 3 1 #" "
0 0 14 3 11 #"environment"
0 0 4 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 16 #"empty-env-record"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 19 #"extended-env-record"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 4 #"syms"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"list-of"
0 0 4 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 7 #"vector?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 85
(
 #";**********************************CELDAS***************************"
 #"*****************"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 35 #";definici\303\263n del tipo de dato celda"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 4 3 1 #" "
0 0 14 3 5 #"celda"
0 0 4 3 1 #" "
0 0 14 3 6 #"celda?"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 6 #"a-cell"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 14 3 7 #"vector?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 17 3 86
(
 #";**********************************PUERTOS**************************"
 #"******************"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";definici\303\263n del tipo de dato puerto"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 4 3 1 #" "
0 0 14 3 6 #"puerto"
0 0 4 3 1 #" "
0 0 14 3 7 #"puerto?"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 6 #"a-port"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 14 3 7 #"vector?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 17 3 85
(
 #";**********************************REGISTROS************************"
 #"*****************"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 17 3 34 #";Definici\303\263n tipo de dato REGISTRO"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 9 #"registro?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 6 #"campos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"list-of"
0 0 4 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 14 3 7 #"vector?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 87
(
 #";*******************************************************************"
 #"*******************"
) 0 0 4 29 1 #"\n"
0 0 17 3 85
(
 #";;************************************Expresiones*******************"
 #"*****************"
) 0 0 4 29 1 #"\n"
0 0 17 3 16 #";eval-expression"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"exp"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 10 #"expression"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 10 #"entero-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"ent"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"parse-to-number"
0 0 4 3 1 #" "
0 0 14 3 3 #"ent"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 12 #"flotante-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"flt"
0 0 22 3 2 #")("
0 0 14 3 15 #"parse-to-number"
0 0 4 3 1 #" "
0 0 14 3 3 #"flt"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 7 #"var-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"update-store2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 2 #"  "
0 0 14 3 2 #"id"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"apply-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 31 #"; (a-var-exp () create-a-var())"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"exps"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 11 #"primapp-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"prim"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 22 #"eval-primapp-exp-rands"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 14 3 4 #"prim"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 10 #"record-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 11 #"vector-vals"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 11 #"vector-vals"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 14 3 11 #"vector-vals"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 8 #"proc-exp"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"nombre"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #"("
0 0 4 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 6 #"nombre"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"$"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 7 #"closure"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"apply-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 6 #"nombre"
0 0 4 3 1 #" "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"closure"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 5 #")))))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 7 #"app-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rator"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"proc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"apply-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 5 #"rator"
0 0 22 3 4 #"))))"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-rands-proc"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"procval?"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 15 #"apply-procedure"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"eval-expression"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 4 3 9 #"         "
0 0 19 3 35 #"\"Attempt to apply non-procedure ~s\""
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 12 #"acc-camp-reg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"nomReg"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 13 #"cons-camp-reg"
0 0 4 3 1 #" "
0 0 14 3 6 #"nomReg"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 7 #"set-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 7 #"asignar"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 8 #"bool-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 8 #"true-exp"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 9 #"false-exp"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"local-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"list-serials"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"asig-pos-env"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 13 #"save-in-store"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-cuerpo"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"extend-env"
0 0 4 3 2 #"  "
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 12 #"list-serials"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 7 #"for-exp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 14 3 7 #"var-val"
0 0 4 3 1 #" "
0 0 14 3 8 #"var-stop"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"arg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"asig-pos-env"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 4 3 1 #" "
0 0 14 3 5 #"var-v"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 7 #"var-val"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 4 3 1 #" "
0 0 14 3 5 #"var-s"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 8 #"var-stop"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"varv"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 5 #"var-v"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 5 #"var-s"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 12 #"update-store"
0 0 4 3 1 #" "
0 0 14 3 5 #"var-v"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 122
(
 #";                 (if (variable? var-v)(eopl:error 'apply-env \"Nooo"
 #"ooo binding for ~s\" (length (vector-ref init-store 0)))"
) 0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 11 #"for-exp-aux"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 14 3 4 #"varv"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 14 3 4 #"body"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"extend-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 14 3 3 #"arg"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"arg"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";;******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 15 #";local {I F} in"
0 0 4 29 1 #"\n"
0 0 17 3 9 #";set I =1"
0 0 4 29 1 #"\n"
0 0 17 3 9 #";set F =9"
0 0 4 29 1 #"\n"
0 0 17 3 19 #";for Y in I .. F do"
0 0 4 29 1 #"\n"
0 0 17 3 7 #";+{Y Y}"
0 0 4 29 1 #"\n"
0 0 17 3 4 #";end"
0 0 4 29 1 #"\n"
0 0 17 3 4 #";end"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"get-serial"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 10 #"a-variable"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 24 #";(define get-serial-cell"
0 0 4 29 1 #"\n"
0 0 17 3 16 #";  (lambda (var)"
0 0 4 29 1 #"\n"
0 0 17 3 21 #";    (cases celda var"
0 0 4 29 1 #"\n"
0 0 17 3 40 #";      (a-cell (serial valor) serial))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-valor"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 10 #"a-variable"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"celda?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 5 #"celda"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 6 #"a-cell"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"puerto?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 6 #"puerto"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 6 #"a-port"
0 0 22 3 1 #"("
0 0 14 3 5 #"valor"
0 0 22 3 2 #")("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 8 #"))))))))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"for-result"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 53 #";;;FUNCION aUXILIaR DE (FOR) REaLIZa LaS ITERaCIONES "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"for-exp-aux"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 14 3 3 #"ini"
0 0 4 3 1 #" "
0 0 14 3 3 #"fin"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"arg"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 25 #";      (primitive-setref!"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";       (apply-env-ref env var) arg)"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"arg"
0 0 4 3 1 #" "
0 0 14 3 3 #"ini"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 13 #";      (begin"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";        (setref!"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";         (apply-env-ref env var)"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";         (eval-expression fin env))"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";        1)"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 9 #"check-for"
0 0 4 3 1 #" "
0 0 14 3 3 #"ini"
0 0 4 3 1 #" "
0 0 14 3 3 #"fin"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"for-result"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-cuerpo"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"apply-env-ref"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 11 #"for-exp-aux"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 3 #"ini"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"fin"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"arg"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 10 #"for-result"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 43 #";;; CHEKEa La CONDICION DE PaRaDa DEL (FOR)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"check-for"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"ini"
0 0 4 3 1 #" "
0 0 14 3 3 #"fin"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 4 3 1 #" "
0 0 14 3 3 #"ini"
0 0 4 3 1 #" "
0 0 14 3 3 #"fin"
0 0 22 3 1 #")"
0 0 20 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 20 3 2 #"#t"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 4 3 1 #" "
0 0 14 3 9 #"reference"
0 0 4 3 1 #" "
0 0 14 3 10 #"reference?"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"a-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"position"
0 0 4 3 1 #" "
0 0 14 3 8 #"integer?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"vector"
0 0 4 3 1 #" "
0 0 14 3 7 #"vector?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";;; aSIGNa UN VaLOR a UNa REFERENCIa"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"primitive-setref!"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 9 #"reference"
0 0 4 3 1 #" "
0 0 14 3 3 #"ref"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"a-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 49 #";;;CREa UNa REFERENCIa DE UN VaLOR EN EL aMBIENTE"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"apply-env-ref"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 11 #"environment"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 16 #"empty-env-record"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"apply-env"
0 0 4 3 1 #" "
0 0 19 3 19 #"\"No binding for ~s\""
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 19 #"extended-env-record"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"syms"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 7 #"old-env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 5 #"a-ref"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 13 #"apply-env-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"old-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 104
(
 #";*******************************************************************"
 #"************************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 37 #";FUNCIONES AUXILIARES eval-expression"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"eval-cuerpo"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 7 #"cuerpoc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"primero"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 7 #"primero"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 7 #"primero"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 11 #"eval-cuerpo"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"cuerpoc"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 50 #";Funcion que aplica update-store por cada variable"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"save-in-store"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"vars"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"update-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 2 #"  "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 18 #"save-in-store-cell"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"vars"
0 0 4 3 1 #" "
0 0 14 3 3 #"num"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"update-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-cell"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 2 #"  "
0 0 14 3 3 #"num"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 4 29 1 #"\n"
0 0 17 3 64
#";Funcion que asigna posiciones en un ambiente (local{X} in X end"
0 0 4 29 1 #"\n"
0 0 17 3 94
(
 #";ej: si init-store tiene 3 elementos  y le quiero agregar 2 al ambie"
 #"nte, entoncs cant=2 posF=3"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"asig-pos-env"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cant"
0 0 4 3 1 #" "
0 0 14 3 4 #"posF"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 4 #"posF"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 4 #"cant"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 2 #"  "
0 0 14 3 4 #"posF"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"asig-pos-env"
0 0 4 3 1 #" "
0 0 14 3 4 #"cant"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 4 #"posF"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 6 #"))))))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 17 3 91
(
 #";Funcion que de acuerdo al tipo de elemento realiza una asignacion ("
 #"cambio en esta funcion)"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"asignar"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"celda?"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"celda?"
0 0 4 3 2 #"  "
0 0 14 3 4 #"var2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 17 3 65
#";(eopl:error 'apply-primitive \"noooooooooo ~s\"  (get-valor var2))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 12 #"asig-var-cel"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"puerto?"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 2 #")("
0 0 14 3 7 #"puerto?"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 13 #"asig-var-port"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";        ;;terminar condicionnnn "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 4 #")))("
0 0 14 3 12 #"asig-var-reg"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 17 3 34 #";variable-registro (aqui no llega)"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 2 #"(("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 17 3 19 #"; variable-variable"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 17 3 13 #";campoReg-var"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 17 3 13 #";var-campoReg"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 5 #")))))"
0 0 4 3 1 #" "
0 0 17 3 18 #";campoReg-campoReg"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 12 #"asig-var-var"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 2 #"(("
0 0 14 3 2 #"or"
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 2 #"  "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"asig-var-num"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 2 #"))"
0 0 17 3 34 #";variable-numero o numero-variable"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 2 #"  "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 2 #")("
0 0 14 3 12 #"asig-var-reg"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 17 3 19 #"; registro-variable"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 2 #"  "
0 0 14 3 4 #"var2"
0 0 22 3 3 #"))("
0 0 14 3 12 #"asig-var-reg"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 17 3 19 #"; variable-registro"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 17 3 33 #";asignar una variable a un puerto"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"asig-var-port"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"isFree?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"varPort"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"isFree?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 2 #"  "
0 0 14 3 4 #"var1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 17 3 69
(
 #";(eopl:error 'apply-primitive \"noooooooooo ~s\" (get-serial var1)))"
 #")))"
) 0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"varPort"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"asig-var-port"
0 0 4 3 1 #" "
0 0 19 3 31 #"\"La variable ya esta ligada ~s\""
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";Asignar una variable a una celda"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"asig-var-cel"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"isFree?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"varCell"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 22 3 4 #")))("
0 0 14 3 12 #"update-store"
0 0 4 3 1 #" "
0 0 14 3 7 #"varCell"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"isFree?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"varCell"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";          "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";Asignar una variable a otra variable"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"asig-var-var"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"serial1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 7 #"serial2"
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 3 #"))("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 3 #"))("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 17 3 28 #";Para unificar dos registros"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 5 #")))))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"eval-regs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 4 #"))))"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 9 #"unif-regs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"asig-var"
0 0 4 3 1 #" "
0 0 19 3 22 #"\"No se puede unificar\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 17 3 33 #";Asignar una variable a un numero"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"asig-var-num"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"verificar-sym-var"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 9 #"variable?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 3 #"num"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"verificar-sym-var"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"num"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 12 #"asig-var-num"
0 0 4 3 1 #" "
0 0 19 3 25 #"\"Varible ~s ya derminada\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 35 #";Asignar una variable a un registro"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"asig-var-reg"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 10 #"regEnStore"
0 0 22 3 1 #"("
0 0 14 3 10 #"create-reg"
0 0 4 3 1 #" "
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"regEnStore"
0 0 22 3 8 #"))))))))"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 17 3 75
(
 #";(apply-env-env env (car (get-valor var1)) (get-serial regEnStore) )"
 #")))))))"
) 0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 96
(
 #";Funcion q determina si una variable esta libre (una variable puede "
 #"referenciar a otra variable)"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"isFree2?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 2 #"))"
0 0 17 3 28 #";(isFree2? (get-serial var))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 49 #";Funcion que determina si una variable esta libre"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"isFree?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 3 #")))"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 97
(
 #";verificar-sym-var: funcion q verifica cual de los dos elementos ent"
 #"rantes es el simbolo  x=7 7=x"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"verificar-sym-var"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"var1"
0 0 4 3 1 #" "
0 0 14 3 4 #"var2"
0 0 4 3 1 #" "
0 0 14 3 4 #"pred"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"var1"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 4 #"var2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 17 3 54 #";Funcion que permite consultar el campo de un registro"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"cons-camp-reg"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"nomReg"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 9 #"serialVar"
0 0 22 3 1 #"("
0 0 14 3 9 #"apply-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 6 #"nomReg"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 14 3 9 #"serialVar"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"reg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 14 3 3 #"reg"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 10 #"serialCamp"
0 0 22 3 1 #"("
0 0 14 3 22 #"consultar-val-registro"
0 0 4 3 1 #" "
0 0 14 3 3 #"reg"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 12 #"get-last-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"serialCamp"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"cons-camp-reg"
0 0 4 3 1 #" "
0 0 19 3 29 #"\"Error: no es un registro ~s\""
0 0 4 3 1 #" "
0 0 14 3 3 #"reg"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";Funcion que retorna la ultima referencia a una variable          "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"get-last-ref"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"serialCamp"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 10 #"serialCamp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"get-last-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 14 3 10 #"serialCamp"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 67
#";Funcion que retorna el ultimo serial de referencia de una variable"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"get-last-ref2"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"serial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 14 3 6 #"serial"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";aplicar eval-expression a cada elemento de una "
0 0 4 29 1 #"\n"
0 0 17 3 34 #"; lista de operandos (expresiones)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 22 #"eval-primapp-exp-rands"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rands"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"eval-rands-proc"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rands"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 19 #"eval-rands-proc-aux"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 19 #"eval-rands-proc-aux"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rands"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"eval-rands-proc-aux"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"update-store2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"eval-rands-proc-aux"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 19 #"eval-rands-proc-aux"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"rands"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";;******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 90
(
 #";****************************************PRIMITIVAS*****************"
 #"**********************"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";apply-primitive: <primitiva> <list-of-expression> -> numero"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"apply-primitive"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"prim"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 9 #"primitive"
0 0 4 3 1 #" "
0 0 14 3 4 #"prim"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 8 #"sum-prim"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 19 #"verificarTipoNumero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 34 #"\"Error: Numeros de diferente tipo\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 38 #"\"Error: Minimo requiere dos operandos\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 6 #"operar"
0 0 4 3 1 #" "
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 8 #"sub-prim"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 19 #"verificarTipoNumero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 34 #"\"Error: Numeros de diferente tipo\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 41 #"\"Error: Cantidad de operandos incorrecta\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 9 #"mult-prim"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 19 #"verificarTipoNumero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 34 #"\"Error: Numeros de diferente tipo\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 40 #"\"Error Cantidad de operandos incorrecta\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 6 #"operar"
0 0 4 3 1 #" "
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 8 #"div-prim"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 19 #"verificarTipoNumero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 34 #"\"Error: Numeros de diferente tipo\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 22 #"\"Error Division por 0\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"menor-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"meneq-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"<="
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"mayor-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 22 3 4 #")))("
0 0 14 3 1 #">"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"mayig-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 22 3 4 #")))("
0 0 14 3 2 #">="
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"igual-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 11 #"orelse-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #")("
0 0 14 3 7 #"equals?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 3 #"))("
0 0 14 3 2 #"or"
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #")("
0 0 14 3 7 #"equals?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 12 #"andthen-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 1 #" "
0 0 14 3 4 #"prim"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #")))("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 9 #"unif-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 11 #"isfree-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"isdet-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 22 3 1 #"("
0 0 14 3 8 #"isFree2?"
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 12 #"newcell-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-cell"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 12 #"valcell-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 3 #"val"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"celda?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"list?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 37 #"\"No es una variable de tipo celda ~s\""
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 11 #"iscell-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 3 #"val"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"celda?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 20 3 2 #"#t"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 12 #"setcell-prim"
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 3 #"val"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 3 #"cel"
0 0 22 3 1 #"("
0 0 14 3 11 #"create-cell"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 14 3 3 #"cel"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 12 #"newport-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"port"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-port"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"var"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"varPort"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 14 3 4 #"port"
0 0 4 3 1 #" "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 12 #"update-store"
0 0 4 3 1 #" "
0 0 14 3 7 #"varPort"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 4 #"port"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-port"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 7 #"varPort"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 12 #"valport-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 3 #"val"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"puerto?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"list?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"apply-primitive"
0 0 4 3 1 #" "
0 0 19 3 37 #"\"No es una variable de tipo celda ~s\""
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 11 #"isport-prim"
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 3 #"val"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"puerto?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 20 3 2 #"#t"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"sendP-prim"
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #"(("
0 0 14 3 3 #"val"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"puerto?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"vecP"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 4 #"vecP"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"vector?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 17 3 52 #";(eopl:error 'apply-primitive \"noooooooooo ~s\"  444)"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"vals"
0 0 22 3 1 #"("
0 0 14 3 13 #"vector-append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-valor"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"vecP"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"portVec"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-port"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 7 #"portVec"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 17 3 6 #";vals)"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 17 3 18 #";(if (puerto? val)"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 17 3 65
#";(eopl:error 'apply-primitive \"noooooooooo ~s\"  (get-valor val)) "
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 4 29 1 #"\n"
0 0 17 3 50 #";                               (if (vector? vecP)"
0 0 4 29 1 #"\n"
0 0 17 3 89
(
 #";                                   (eopl:error 'apply-primitive \"n"
 #"oooooooooo ~s\"  44444)"
) 0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"portVec"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-port"
0 0 4 3 1 #" "
0 0 14 3 4 #"vecP"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 7 #"portVec"
0 0 22 3 8 #"))))))))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 17 3 88
(
 #";(eopl:error 'apply-primitive \"noooooooooo ~s\"  (get-last-ref2 (ge"
 #"t-serial (car args))))"
) 0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 17 3 64
#";(eopl:error 'apply-primitive \"noooooooooo ~s\"  (car(cdr args)))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"vector-append"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 14 3 4 #"vecs"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"len"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 13 #"vector-length"
0 0 4 3 1 #" "
0 0 14 3 4 #"vecs"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"result"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 14 3 3 #"len"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"result-index"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 12 #"source-index"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 12 #"rest-of-vecs"
0 0 4 3 1 #" "
0 0 14 3 4 #"vecs"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 12 #"rest-of-vecs"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 2 #"(("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 12 #"source-index"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"vector-length"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 12 #"rest-of-vecs"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 14 3 12 #"result-index"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 12 #"rest-of-vecs"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 4 3 1 #" "
0 0 14 3 12 #"result-index"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 12 #"rest-of-vecs"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"source-index"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 12 #"result-index"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 12 #"source-index"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"rest-of-vecs"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 17 3 92
(
 #";***************************FUNCIONES AUX APPLY PRIMITIVE***********"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 63
#";Funcion que opera un conjunto de numeros dependiendo del signo"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"operar"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"operar"
0 0 4 3 1 #" "
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 6 #"operar"
0 0 4 3 1 #" "
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 43 #";Funcion para convertir un symbolo a numero"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";(substring \"~5\" 0 1) retorna ~"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"parse-to-number"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"substring"
0 0 4 3 2 #"  "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"~\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 2 #"-1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->number"
0 0 22 3 1 #"("
0 0 14 3 9 #"substring"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->number"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"unparse"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #">="
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 4 #"args"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"~\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"number->string"
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 2 #"-1"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";Funcion que cambia a la notacion del interprete los numeros"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 16 #"evaluarResultado"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"dato"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 4 #"dato"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"~\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"number->string"
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 2 #"-1"
0 0 4 3 1 #" "
0 0 14 3 4 #"dato"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 4 #"dato"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 121
(
 #";Cambio en verificar tipo numero, uso de funcion exact de schme, si "
 #"retorna #t es pq todos los numeros son del mismo tipo"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 19 #"verificarTipoNumero"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 7 #"primero"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"exact?"
0 0 4 3 1 #" "
0 0 14 3 7 #"primero"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"exact?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"verificarTipoNumero"
0 0 4 3 1 #" "
0 0 14 3 7 #"primero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 22 3 1 #"("
0 0 14 3 6 #"exact?"
0 0 4 3 1 #" "
0 0 14 3 7 #"primero"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 22 3 1 #"("
0 0 14 3 6 #"exact?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"verificarTipoNumero"
0 0 4 3 1 #" "
0 0 14 3 7 #"primero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"resto"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 20 3 2 #"#f"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 67
#";funcion que transforma todos los valores d una lista a numeros ya "
0 0 17 3 72
(
 #"que en apply-primitive es posible hacer +{X Y} donde X y Y son varia"
 #"bles"
) 0 0 4 29 1 #"\n"
0 0 17 3 7 #";prueba"
0 0 4 29 1 #"\n"
0 0 17 3 28 #";(define D (create-var 0 4))"
0 0 4 29 1 #"\n"
0 0 17 3 28 #";(define E (create-var 1 5))"
0 0 4 29 1 #"\n"
0 0 17 3 35 #";(define listica (list D 412 E 76))"
0 0 4 29 1 #"\n"
0 0 17 3 24 #"; (to-number 'a listica)"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"to-number"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"to-number"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 8 #"))))))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 90
(
 #";true-value?: determina si un valor dado corresponde a un valor bool"
 #"eano falso o verdadero"
) 0 0 4 29 1 #"\n"
0 0 17 3 20 #";(define true-value?"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";  (lambda (x)"
0 0 4 29 1 #"\n"
0 0 17 3 22 #";    (not (zero? x))))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"true-value?"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"eqv?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 4 #"eqv?"
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 3 #"exp"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 17 3 90
(
 #";****************************************PROCEDIMIENTOS*************"
 #"**********************"
) 0 0 4 29 1 #"\n"
0 0 17 3 15 #";Procedimientos"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 4 3 1 #" "
0 0 14 3 7 #"procval"
0 0 4 3 1 #" "
0 0 14 3 8 #"procval?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"closure"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"ids"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"list-of"
0 0 4 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 11 #"expression?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 96
(
 #";apply-procedure: evalua el cuerpo de un procedimientos en el ambien"
 #"te extendido correspondiente"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"apply-procedure"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"proc"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 7 #"procval"
0 0 4 3 1 #" "
0 0 14 3 4 #"proc"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 7 #"closure"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"ids"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"extend-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"ids"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 57 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 4 3 1 #" "
0 0 14 3 6 #"target"
0 0 4 3 1 #" "
0 0 14 3 7 #"target?"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 13 #"direct-target"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"expval"
0 0 4 3 1 #" "
0 0 14 3 7 #"expval?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 15 #"indirect-target"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"ref"
0 0 4 3 1 #" "
0 0 14 3 21 #"ref-to-direct-target?"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"expval?"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"procval?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"boolean?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"list?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"scheme-value?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";**********************************FUNCIONES AMBIENTES**************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 30 #";empty-env:      -> enviroment"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";funci\303\263n que crea un ambiente vac\303\255o"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"empty-env"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 16 #"empty-env-record"
0 0 22 3 3 #")))"
0 0 4 3 7 #"       "
0 0 17 3 43 #";llamado al constructor de ambiente vac\303\255o "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 73
(
 #";extend-env: <list-of symbols> <list-of numbers> enviroment -> envir"
 #"oment"
) 0 0 4 29 1 #"\n"
0 0 17 3 40 #";funci\303\263n que crea un ambiente extendido"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"syms"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 19 #"extended-env-record"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"list->vector"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 46
#";funci\303\263n que busca un s\303\255mbolo en un ambiente"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"apply-env"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 11 #"environment"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 16 #"empty-env-record"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"apply-env"
0 0 4 3 1 #" "
0 0 19 3 19 #"\"No binding for ~s\""
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 19 #"extended-env-record"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"syms"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"apply-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"apply-env-env"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 9 #"newSerial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 11 #"environment"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 16 #"empty-env-record"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 17 3 53 #";(eopl:error 'apply-env-env \"No binding for ~s\" sym))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 19 #"extended-env-record"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"syms"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 9 #"newSerial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 13 #"apply-env-env"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 9 #"newSerial"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";**********************************FUNCIONES STORE******************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 62
#";funcion que actualiza un store, agregando un valor al final  "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"update-store"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #")("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 61
#";funcion que actualiza un store, cambiando un elemento de \303\251l"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"set-store"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"setElement"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 72
(
 #";funcion que actualiza un store y devuelve el serial dl ultimo eleme"
 #"nto "
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"update-store2"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #")("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"set-store-cell"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"setElement"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-cell"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 70
(
 #";Funcion que busca un serial ene el store y devuelve su valor asocia"
 #"do"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"serial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 15 #"aux-apply-store"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"aux-apply-store"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 19 3 24 #"\"Posicion no encontrada\""
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"variable?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"variable"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 10 #"a-variable"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"serialE"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 7 #"serialE"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 14 3 5 #"valor"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 15 #"aux-apply-store"
0 0 4 3 1 #" "
0 0 14 3 6 #"serial"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 5 #")))))"
0 0 17 3 31 #";ojo hasta aqui es de registros"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 17 3 53 #";                            (if (celda? (car lista))"
0 0 4 29 1 #"\n"
0 0 17 3 57 #";                                (cases celda (car lista)"
0 0 4 29 1 #"\n"
0 0 17 3 51 #";                                  (a-cell (svalor)"
0 0 4 29 1 #"\n"
0 0 17 3 64
#";                                   (if (equal? serialC serial) "
0 0 4 29 1 #"\n"
0 0 17 3 36 #";                            valor  "
0 0 4 29 1 #"\n"
0 0 17 3 69
(
 #";                            (aux-apply-store serial (cdr lista)))))"
 #")"
) 0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";**********************************FUNCIONES REGISTROS**************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 75
(
 #";Funcion crear registro (al crear un reg los campos tambien pueden s"
 #"er reg)"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"create-reg"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 15 #"vector-seriales"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 12 #"val-in-store"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 7 #"evalExp"
0 0 22 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 42 #"                                          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 14 3 7 #"evalExp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 7 #"evalExp"
0 0 4 29 1 #"\n"
0 0 4 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq2"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 2 #")("
0 0 14 3 10 #"create-reg"
0 0 4 3 1 #" "
0 0 14 3 5 #"etiq2"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 59
#"                                                           "
0 0 22 3 1 #"("
0 0 14 3 13 #"update-store2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 14 3 7 #"evalExp"
0 0 4 3 1 #" "
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 14 3 3 #"val"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"listSeriales"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-serial"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 12 #"val-in-store"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 15 #"vector-seriales"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 12 #"listSeriales"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"newReg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 4 #"camp"
0 0 4 3 1 #" "
0 0 14 3 15 #"vector-seriales"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 12 #"update-store"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"newReg"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 52 #";FUNCION: asignar un valor a un campo de un registro"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 16 #"asig-val-cam-reg"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"reg"
0 0 4 3 1 #" "
0 0 14 3 3 #"cam"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 3 #"reg"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 20 #"asignar-val-registro"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 19 3 41 #"\"Error: este registro no contiene campos\""
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 6 #"campos"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 4 3 1 #" "
0 0 14 3 3 #"cam"
0 0 4 3 1 #" "
0 0 14 3 6 #"campos"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"valor"
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 20 #"asignar-val-registro"
0 0 4 3 1 #" "
0 0 19 3 23 #"\"Error: campo asignado\""
0 0 4 3 1 #" "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 20 #"asignar-val-registro"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 19 3 46 #"\"Error: este registro no contiene el campo ~s\""
0 0 4 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 8 #"))))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 52 #";FUNCION: consultar valor de un campo en un registro"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 22 #"consultar-val-registro"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"reg"
0 0 4 3 1 #" "
0 0 14 3 3 #"cam"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 3 #"reg"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 22 #"consultar-val-registro"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 19 3 41 #"\"Error: este registro no contiene campos\""
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"etiq"
0 0 4 3 1 #" "
0 0 14 3 6 #"campos"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 4 3 1 #" "
0 0 14 3 3 #"cam"
0 0 4 3 1 #" "
0 0 14 3 6 #"campos"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 22 #"consultar-val-registro"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 19 3 46 #"\"Error: este registro no contiene el campo ~s\""
0 0 4 3 1 #" "
0 0 14 3 6 #"campos"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 80
(
 #";Funcion que asigna una posicion a los elementos de un registro dent"
 #"ro del store"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 20 #"asignar-pos-en-store"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 12 #"asig-pos-env"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"init-store"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 57 #";Funcion que verifica si dos registros se pueden unificar"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"eval-regs"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"reg1"
0 0 4 3 1 #" "
0 0 14 3 4 #"reg2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 4 #"reg1"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq1"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos1"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 4 #"reg2"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq2"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos2"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"eval-etiq"
0 0 4 3 1 #" "
0 0 14 3 5 #"etiq1"
0 0 4 3 1 #" "
0 0 14 3 5 #"etiq2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"eval-camps"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos1"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"eval-camp-and-vals"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos1"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores1"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos2"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 20 3 2 #"#t"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 58
#";Funcion q verifica q dos etiquetas de un reg sean iguales"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"eval-etiq"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq1"
0 0 4 3 1 #" "
0 0 14 3 5 #"etiq2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 5 #"etiq1"
0 0 4 3 1 #" "
0 0 14 3 5 #"etiq2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 71
(
 #";Funcion que verifica que el los campos de un reg tengan el mismo la"
 #"rgo"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"eval-camps"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 120
(
 #";Funcion que determina si los campos del reg1 son iguales a los del "
 #"reg2 (comparando internamente sus valores asociados)"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 18 #"eval-camp-and-vals"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 11 #"campoActual"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"rib-find-position"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 17 3 31 #"; encuentre al campo1 en campo2"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 18 #"serial-maximo-var1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"rib-find-position"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 18 #"serial-maximo-var2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 18 #"eval-camp-and-vals"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 9 #"eval-regs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 2 #"))"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 20 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 9 #")))))))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";Funcion que unifica registros"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"unif-regs"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"reg1"
0 0 4 3 1 #" "
0 0 14 3 4 #"reg2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 4 #"reg1"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq1"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos1"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 15 3 5 #"cases"
0 0 4 3 1 #" "
0 0 14 3 8 #"registro"
0 0 4 3 1 #" "
0 0 14 3 4 #"reg2"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-vacio"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"etiq2"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos2"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 22 3 1 #"("
0 0 14 3 14 #"unif-camps-reg"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos1"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores1"
0 0 4 3 1 #" "
0 0 14 3 7 #"campos2"
0 0 4 3 1 #" "
0 0 14 3 8 #"valores2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 17 3 125
(
 #";Funcion q unifica los campos de un registro (ojoooo: antes estaba -"
 #"> (set-store posCampo2 (create-var posCamp1 campoActual))"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"unif-camps-reg"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 11 #"campoActual"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"rib-find-position"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 17 3 31 #"; encuentre al campo1 en campo2"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"posCamp1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"rib-find-position"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 8 #"posCamp2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 18 #"serial-maximo-var1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCamp1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 18 #"serial-maximo-var2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"get-last-ref2"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCamp2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 14 #"unif-camps-reg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCamp1"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 14 #"unif-camps-reg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCamp2"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 22 3 1 #"("
0 0 14 3 14 #"unif-camps-reg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"_"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 41 #"                                         "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCamp1"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 22 3 2 #"))"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 14 #"unif-camps-reg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 41 #"                                         "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"registro?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var2"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 9 #"set-store"
0 0 4 3 1 #" "
0 0 14 3 18 #"serial-maximo-var1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"create-var"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCamp2"
0 0 4 3 1 #" "
0 0 14 3 11 #"campoActual"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 14 #"unif-camps-reg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 8 #"posCampo"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp1"
0 0 4 3 1 #" "
0 0 14 3 4 #"val1"
0 0 4 3 1 #" "
0 0 14 3 5 #"camp2"
0 0 4 3 1 #" "
0 0 14 3 4 #"val2"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 45 #"                                             "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 13 #")))))))))))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 4 29 1 #"\n"
0 0 17 3 89
(
 #";**********************************FUNCIONES CELDAS*****************"
 #"*********************"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"create-cell"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"vector"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 6 #"vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"a-cell"
0 0 4 3 1 #" "
0 0 14 3 6 #"vector"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 19 #";************celdas"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"create-port"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"vector"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 6 #"vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 5 #"valor"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"a-port"
0 0 4 3 1 #" "
0 0 14 3 6 #"vector"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 89
(
 #";*******************************************************************"
 #"*********************"
) 0 0 4 29 1 #"\n"
0 0 17 3 31 #";FUNCIONES AUXILIARES GENERALES"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 65
(
 #"; funciones auxiliares para encontrar la posici\303\263n de un s\303"
 #"\255mbolo"
) 0 0 4 29 1 #"\n"
0 0 17 3 41 #"; en la lista de s\303\255mbolos de un ambiente"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"rib-find-position"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 18 #"list-find-position"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"list-index"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sym1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"eqv?"
0 0 4 3 1 #" "
0 0 14 3 4 #"sym1"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"list-index"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 14 3 2 #"ls"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 2 #"ls"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 2 #"ls"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"list-index-r"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"list-index"
0 0 4 3 1 #" "
0 0 14 3 4 #"pred"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 2 #"ls"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 20 3 2 #"#f"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 63
#";cambia el elemento de una lista de acuerdo con su posicion (n)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"setElement"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lista"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 69
(
 #";    (if (= n 5)(eopl:error 'setElement \"Varible ~s ya derminada\" "
 #"n))"
) 0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"setElement"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"lista"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 63
#";**************************************************************"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"miRegistro1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"miRegistro"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"campo1"
0 0 4 3 1 #" "
0 0 14 3 6 #"campo2"
0 0 4 3 1 #" "
0 0 14 3 6 #"campo3"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 3 #"#(("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"miRegistro2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"reg-datos"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"miRegistro"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"campo1"
0 0 4 3 1 #" "
0 0 14 3 6 #"campo2"
0 0 4 3 1 #" "
0 0 14 3 6 #"campo3"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 3 #"#(("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #";(asig-val-cam-reg miRegistro 'campo1 2)"
0 0 4 29 1 #"\n"
0 0 17 3 73
(
 #";(update-store (create-var (length(vector-ref init-store 0)) miRegis"
 #"tro))"
) 0 0 4 29 1 #"\n"
0 0 17 3 11 #";init-store"
0 0 4 29 1 #"\n"
0 0 17 3 32 #";(asignar-pos-en-store '(1 2 3))"
0 0 4 29 1 #"\n"
0           0
